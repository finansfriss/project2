/* Clean and prepare the data. */

/* Create copies of original tables. */
DROP TABLE IF EXISTS loansacc;
CREATE TABLE loansacc AS SELECT * FROM loansacc_original;
DROP TABLE IF EXISTS loansrej;
CREATE TABLE loansrej AS SELECT * FROM loansrej_original;

/* Delete some observations. */

DELETE 
FROM loansacc
WHERE
	substr(issue_d,5,4)= '' /* Delete observations where year is empty. */
	OR
	substr(issue_d,5,4)= '2007' /* Delete observations from 2007 since Lending Club changed model in 2008. */
;

/* Add year as a separate column. */
ALTER TABLE loansacc 
ADD COLUMN year;

/* Run the two commands above before running the query below. */

UPDATE loansacc
SET year = substr(issue_d,5,4);

/*Set FICO scores with value 0 to NULL. */
update loansacc set last_fico_range_high = null where last_fico_range_high = 0;
update loansacc set last_fico_range_low = null where last_fico_range_low = 0;
update loansacc set sec_app_fico_range_low = null where last_fico_range_high = 0;
update loansacc set sec_app_fico_range_high = null where last_fico_range_low = 0;

/* Tasks i. to iii. */

DROP TABLE IF EXISTS I1;

CREATE TABLE I1 AS /* Creates the table I1. */
SELECT
	year,
	count(id) * 1.00 as loans_count, /* Create variable for number of loans. */
	sum(CASE WHEN loan_status='Default' OR loan_status='Charged Off' OR loan_status='Does not meet the credit policy. Status:Charged Off' THEN 1 ELSE 0 END) * 1.00 AS default_no, /* Create variable for number of defaulted loans. */
	avg(loan_amnt) AS loan_avg /* Create variable for average loan amount. */
FROM loansacc
WHERE loan_amnt IS NOT NULL
GROUP BY year
ORDER BY year
;

SELECT
	year,
	loan_avg,
	loans_count,
	default_no,
	(default_no/loans_count) * 100.00 as default_pct
FROM I1
ORDER BY year
;

/* Task iv. */

SELECT
	loan_status,
	avg(loan_amnt) as loan_avg, /* Create variable for average loan amount. */
	count(id) as loans_count /* Create variable for number of loans. */
FROM loansacc
GROUP BY loan_status
ORDER BY loan_avg desc
;

	
/* Task v. */

DROP TABLE IF EXISTS V1;

CREATE TABLE V1 AS /* Creates the table V1. */
SELECT
	year,
	addr_state AS state, /* Renames the variable for the state. */
	sum(CASE WHEN loan_status='Current' OR loan_status='Fully Paid' THEN 1 ELSE 0 END) * 1.00 AS paid_no, /* Creates variable for loan not being paid back. */
	count(id) * 1.00 AS loans_count, /* Create variable for number of loans. */
	avg(loan_amnt) AS loan_avg /* Create variable for average loan amount. */
FROM loansacc
WHERE loan_amnt IS NOT NULL
GROUP BY year, state
HAVING loans_count > 0 /* Choose the minimum number of loans the state need to have had in that year to qualify for the table. */
ORDER BY year, loan_avg desc
;

SELECT 
	year,
	state,
	max(loan_avg), /* Select maximum average value for each year. */
	paid_no/loans_count AS paid_pct, /* Create variable for percentage paid. */
	1 - (paid_no/loans_count) AS not_paid_pct /* Create variable for percentage not paid. */
FROM V1
GROUP BY year
ORDER BY year
;


/* Task vi. */

SELECT
	loan_status,
	avg(annual_inc) AS avg_inc, /* Creates variable for average average annual income. */
	avg(loan_amnt) AS loan_avg, /* Creates variable for average loan size. */
	avg(int_rate) AS avg_interest_rate, /* Creates variable for average interest rate. */
	avg(loan_amnt) AS loan_avg, /* Create variable for average loan amount. */
	avg(last_fico_range_high) as avg_high_fico, /* Create variable for average upper bound fico. */
	avg(last_fico_range_low) as avg_low_fico /* Create variable for average lower bound fico. */
FROM loansacc
WHERE loan_amnt IS NOT NULL
GROUP BY loan_status
;


/* Task vii*/

/*Grade vs default rate*/
SELECT 
	sub.default_no/sub.loans_no as default_rate,
	sub.grade
FROM ( 
	SELECT
		loan_status,
		grade,
		sum(CASE WHEN loan_status='Default' OR loan_status='Charged Off' THEN 1 ELSE 0 END) * 1.00 AS default_no, /* Creates variable for loan not being paid back. */
		sum(CASE WHEN loan_status='Default' OR loan_status='Charged Off'OR loan_status='Current' OR loan_status='Fully Paid' THEN 1 ELSE 0 END) * 1.00 AS loans_no /* Create loans for all loans excluding those that do not meed credit policy or are late/grace period */
	FROM loansacc
	WHERE loan_amnt IS NOT NULL
	GROUP BY grade
	) sub
GROUP BY sub.grade
;

/*Subgrade vs default rate*/
SELECT 
	sub.default_no/sub.loans_no as default_rate,
	sub.sub_grade
FROM ( 
	SELECT
		loan_status,
		sub_grade,
		sum(CASE WHEN loan_status='Default' OR loan_status='Charged Off' THEN 1 ELSE 0 END) * 1.00 AS default_no, /* Creates variable for loan not being paid back. */
		sum(CASE WHEN loan_status='Default' OR loan_status='Charged Off'OR loan_status='Current' OR loan_status='Fully Paid' THEN 1 ELSE 0 END) * 1.00 AS loans_no /* Create variable for number of loans excluding those that do not meed credit policy or are late/grace period */
	FROM loansacc
	WHERE loan_amnt IS NOT NULL
	GROUP BY sub_grade
	) sub
GROUP BY sub.sub_grade
;

/*Term vs default rate*/
SELECT 
	sub.default_no/sub.loans_no as default_rate,
	sub.term
FROM ( 
	SELECT
		loan_status,
		term,
		sum(CASE WHEN loan_status='Default' OR loan_status='Charged Off' THEN 1 ELSE 0 END) * 1.00 AS default_no, /* Creates variable for loan not being paid back. */
		sum(CASE WHEN loan_status='Default' OR loan_status='Charged Off'OR loan_status='Current' OR loan_status='Fully Paid' THEN 1 ELSE 0 END) * 1.00 AS loans_no /* Create variable for number of loans excluding those that do not meed credit policy or are late/grace period */
	FROM loansacc
	WHERE loan_amnt IS NOT NULL
	GROUP BY term
	) sub
GROUP BY sub.term
;
